/*
★ Media Queries
★ How to see the preview for different devices?
1) Right click the page - Inspect
2) Click 'Toggle device toolbar' at the top (ctrl + shift + M)
3) Click 'Responsive' at the top
   - Click the device you want to apply ex) Galaxy S5, iPhone X, iPad, ...
*/

/* ***************************************** */
/* HEADER */
/* ***************************************** */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;

  background-color: #fdf2e9;

  /* ★ Since we want our header to be sticky,
  we would use height itself instead of 'padding' to give it a height
  Sticky means it always at the top even though we scroll down the page */
  height: 9.6rem;
  padding: 0 4.8rem; /* top/bottom left/right */

  position: relative;
}

.logo {
  height: 2.2rem;
}

/* ***************************************** */
/* NAVIGATION */
/* ***************************************** */

.main-nav-list {
  list-style: none;
  display: flex;
  gap: 3.2rem;

  align-items: center;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

/* ★ To make sure this design is always applied,
use the code like this '.main-nav-link.nav-cta', not '.nav-cta'
By doing so, it has the highest priority */
.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  border-radius: 9px; /* This is a really small value, and don't want to scale up or down, we would just use 'px', not 'rem' */
  background-color: #e67e22;
  color: #fff;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

/* MOBILE */
.btn-mobile-nav {
  border: none;
  background: none;
  cursor: pointer;

  /* ★ By default, this should be hidden
  because this is just for mobile devices 
  which of width is too narrow to show navigation bar */
  display: none;
}

.icon-mobile-nav {
  height: 4.8rem;
  width: 4.8rem;
  color: #333;
}

/* ★ How to select the icon based on its name */
.icon-mobile-nav[name="close-outline"] {
  display: none;
}

/* STICKY NAVIGATION
Keep the menu navigation at the top, even though we go dow

Apply these effects to 'header' only when the 'sticky' class is the parent of 'header' */
.sticky .header {
  /* ★ When we code 'position: fixed' this, it acts like 'position: absolute'
  So, it is taken out of the page
  Then, some part would be overlapped with 'header'
  ※ It will cover some of the top part of the 'header'
  -> We can modify this with 'Java Script' */
  position: fixed;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 8rem;
  padding-top: 0;
  padding-bottom: 0;
  background-color: rgb(255, 255, 255, 0.97);
  box-shadow: 0 1.2rem 3.2rem rgba(0, 0, 0, 0.03);

  /* Give the highest priority
  If not, elements with higher priority would go above the menu bar */
  z-index: 999;
}

.sticky .section-hero {
  /* It should be the same as the height of 'header' */
  margin-top: 9.6rem;
}

/* ***************************************** */
/* HERO SECTION */
/* ***************************************** */

.section-hero {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  /* width: 1300px */
  max-width: 130rem;
  margin: 0 auto; /*Center the pic */
  /* Give a space at the left size when the screen size is decreasing */
  padding: 0 3.2rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 9.6rem; /*For consistency, we can use the exact same value with the padding value of '.section-hero' */
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.hero-img {
  /* Fill 100% of the parent element */
  width: 100%;
}

.delivered-meals {
  /* We just need 1D, so use flex, not grid */
  display: flex;
  margin-top: 8rem;
  gap: 1.6rem;
  align-items: center;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  /* Usually we don't need to set width,
  because it's automatically set by its height
  However, some browsers have bugs, so it's better to set width for the safe */
  width: 4.8rem;
  border-radius: 50%;
  /* Images will be overlapped */
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

/* ***************************************** */
/* FEATURED IN SECTION */
/* ***************************************** */

.section-featured {
  padding: 4.8rem 0 3.2rem 0;
}

.heading-featured-in {
  font-size: 1.4rem;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  font-weight: 500;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #888;
}

.logos {
  /* Even with images, it's better to use 'flex' box
  because by doing so, we can easily distribute them evenly */
  display: flex;
  /* ★ space-between : space + element1 + space + element2 + space ...
  ★ space-around: space + element1 + space + space + element2 + space + space + element3 + ... */
  justify-content: space-around;
}

.logos img {
  height: 3.2rem;
  /* ★ image from color to 'grey' color

  filter: grayscale(100%);
  -> However this create the image with various grey color
     Some are black, some are light grey, and so on
  
  ★ To make consistent images, we just can make them black with 'brightness'
  And give some opacity to make them grey */
  filter: brightness(0);
  opacity: 50%; /* 0.5 */
}

/* ***************************************** */
/* SECTION HOW : HOW IT WORKS */
/* ***************************************** */

.section-how {
  /* background-color: orangered; */
  padding: 9.6rem 0;
}

/* .section-how div div {
  padding: 100px;
  font-size: 50px;
  background-color: #333;
} */

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Pseudo element : Create a background image behind the 'app' image */
.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  border-radius: 50%; /* circle */

  /* ★ Set the position to center the image behind the 'app' image */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.step-img-box::before {
  width: 60%; /* 60% of parent's width */
  /* height: 60%; */
  /* ★ Trick : Give the same height as width */
  padding-bottom: 60%;
  background-color: #fdf2e9;
  /* ★ Position it 'behind'
  lower value = back
  higher value = front */
  z-index: -2;
}

.step-img-box::after {
  width: 45%;
  padding-bottom: 45%;
  background-color: #f8d8bd;
  z-index: -1;
}

.step-img {
  width: 35%;
}

/* ***************************************** */
/* MEALS SECTION */
/* ***************************************** */

.section-meals {
  padding: 9.6rem 0;
}

.meal {
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);
  border-radius: 11px;

  /* ★ Any overflow elements (ex. image above it) should be applied the same features
  -> the top of 'meal' image will also have border-radius 11px */
  overflow: hidden;

  transition: all 0.4s;
}

/* Pseudo class
★ Effect : Whenever we hover, the entire element moves up
-> ★ To give an animation, which makes it move slow, go to the parent element '.meal' and code 'transition' */
.meal:hover {
  /* ★ Move only up or down : translateY */
  transform: translateY(-1.2rem);

  /* ★ Since the element goes up, we should adjust the shadow a bit to make it more natural */
  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.06);
}

.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}

.meal-tags {
  margin-bottom: 1.2rem;
  display: flex;
  gap: 0.4rem;
}

.tag {
  /* To apply padding, we can use 'inline-block' */
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  color: #333;
  border-radius: 100px;
  font-weight: 600;
}

.tag--vegetarian {
  background-color: #51cf66;
}

.tag--vegan {
  background-color: #94d82d;
}

.tag--paleo {
  background-color: #ffd43b;
}

.meal-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 600;
  margin-bottom: 3.2rem;
}

.meal-attributes {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  height: 2.4rem;
  width: 2.4rem;

  /* This code is not applied for this icon
  stroke: #e67e22;
  fill: #e67e22

  Then, we can try 'color', and it works!*/
  color: #e67e22;
}

.meal-img {
  width: 100%;
}

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
}

/* ***************************************** */
/* TESTIMONIALS SECTION */
/* ***************************************** */

.section-testimonials {
  background-color: #fdf2e9;
  display: grid;
  grid-template-columns: 55fr 45fr;
  align-items: center;
}

.testimonials-container {
  padding: 9.6rem;
}

.testimonials {
  display: grid;
  grid-template-columns: 1fr 1fr;
  row-gap: 4.8rem;
  /* Many times, column needs more gap */
  column-gap: 8rem;
}

.testimonial-img {
  width: 6.4rem;
  border-radius: 50%;
  margin-bottom: 1.2rem;
}

.testimonial-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 1.6rem;
}

.testimonial-name {
  font-size: 1.6rem;
  color: #6f6f6f;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.6rem;
  /* Give the same space at the bottom and the top as the space between pictures */
  padding: 1.6rem;
}

.gallery-item {
  /* ★ By doing so, the whole square size is fixed, but just the image is scaled up */
  overflow: hidden;
}

.gallery-item img {
  display: block; /* The space between the pics has gone */
  width: 100%;
  transition: all 0.4s; /* ★ Animation */
}

.gallery-item img:hover {
  transform: scale(1.1);
}

/* ***************************************** */
/* PRICING SECTION */
/* ***************************************** */

.section-pricing {
  padding: 9.6rem 0;
}

/* Give different background color to emphasize only second one */
.pricing-plan {
  /* background-color: #fdf2e9; */
  border-radius: 11px;
  width: 75%;
}

/* Move the left one all the way right
-> By doing so, two elements can be center of the page */
.pricing-plan--starter {
  justify-self: end;
  border: 2px solid #fdf2e9;
  padding: 4.6rem;
}

.pricing-plan--complete {
  background-color: #fdf2e9;
  padding: 4.8rem;
  position: relative;
  /* Fit the 'BEST VALUE' ribbon to the box */
  overflow: hidden;
}

.pricing-plan--complete::after {
  content: "Best value";
  position: absolute;
  top: 6%;
  right: -18%;

  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;
  color: #333;
  background-color: #ffd43b;
  padding: 0.8rem 8rem;

  /* ★ Rotate the img - 45 degree */
  transform: rotate(45deg);
}

.plan-header {
  text-align: center;
  margin-bottom: 4.8rem;
}

.plan-name {
  color: #cf711f;
  font-weight: 600;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 0.75;
  margin-bottom: 3.2rem;
}

.plan-price {
  font-size: 6.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 1.6rem;
}

.plan-price span {
  font-size: 3rem;
  font-weight: 500;
  margin-right: 0.8rem;
}

.plan-text {
  font-size: 1.6rem;
  line-height: 1.6;
  color: #6f6f6f;
}

.plan-sign-up {
  text-align: center;
  margin-top: 4.8rem;
}

.plan-details {
  font-size: 1.6rem;
  line-height: 1.6;
  text-align: center;
}

.feature-icon {
  color: #e67e22;
  height: 3.2rem;
  width: 3.2rem;
  background-color: #fdf2e9;
  /* Let's double the margin than the margin between title and text to separate them clearly */
  margin-bottom: 3.2rem;
  padding: 1.6rem;
  border-radius: 50%;
}

.feature-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 700;
  margin-bottom: 1.6rem;
}

.feature-text {
  font-size: 1.8rem;
  line-height: 1.8;
}

/* ***************************************** */
/* CTA SECTION */
/* ***************************************** */

/* t */
.section-cta {
  /* 12.8rem is for bottom padding to differentiate it from 'footer' clearly 
  
  ★ padding: top right bottom left
  ★ padding: top horizontal bottom 
  
  padding: 9.6rem 0 12.8rem 0; */
  padding: 4.8rem 0 12.8rem;
}

.cta {
  /* temporarily add the height to see the element
  height: 50rem; */

  /* background-color: #e67e22; */
  display: grid;
  grid-template-columns: 2fr 1fr;
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.15);
  border-radius: 11px;

  /* ★ Gradient
  Adjust the degree
  - deg ex) 90deg, 180deg, ...
  - We also can code with the words to adjust the degree
    ex) to right, to left, to right bottom */
  background-image: linear-gradient(to right bottom, #eb984e, #e67e22);
  overflow: hidden;
}

/* ★ Always check the font color and background color whether they contrast clearly or not */
.cta-text-box {
  padding: 4.8rem 6.4rem 6.4rem 6.4rem;
  color: #45260a;
}

/* cta > heading-seconary */
.cta .heading-secondary {
  /* ★ inherit : use the same color as the parent element, 'cta-text-box' */
  color: inherit;
  margin-bottom: 3.2rem;
}

/* ★ If we use this kinds of code a lot,
we can put this in 'general.css' file and resue it a lot */
.cta-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 4.8rem;
}

.cta-img-box {
  /* This code won't work
  Since we're in the 'css' folder, we can't go to the 'img' folder
  background-image: url("img/eating.jpg");
  
  ★ To go to the parent folder, we should use '.'
  To go to 'two levels up', we should use '..'
  
  ★ Give the color to the picture by putting the box abvoe the picture */
  background-image: linear-gradient(
      to right bottom,
      rgba(235, 151, 78, 0.35),
      rgba(230, 125, 34, 0.35)
    ),
    url("../img/eating.jpg");
  /* To fit the image to the background size */
  background-size: cover;
  background-position: center;
}

.cta-form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 3.2rem;
  row-gap: 2.4rem;
}

.cta-form label {
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  margin-bottom: 1.2rem;
}

/* ★ Font-family is not inherited to input, options, button
We can use 'font-family: inherit' to apply the same font as others */
.cta-form input,
.cta-form select {
  /* occupy their entire parent */
  width: 100%;
  padding: 1.2rem;
  font-size: 1.8rem;
  font-family: inherit;
  color: inherit;
  border: none;
  background-color: #fdf2e9;
  border-radius: 9px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* pseudo element */
.cta-form input::placeholder {
  color: #aaa; /* apply lighter color */
}

.cta-form select {
}

/* ★ Why none of the style is inherited to 'button'?
This is because this button doesn't have any 'href' attribute
However, the style of button in 'general.css' is just for button 'link' and 'visited'
-> Thus, we should add '.btn' in 'general.css' with '.btn:link' and '.btn:visited' style to apply the same style

.cta-form button {
}
*/

/* Apply different 'focus state' style, since it has the dark orange background */
.cta *:focus {
  outline: none;
  box-shadow: 0 0 0 0.8rem rgba(253, 242, 233, 0.5);
}

/* ***************************************** */
/* FOOTER */
/* ***************************************** */

.footer {
  padding: 12.8rem 0;
  border-top: 1px solid #eee;
}

.grid--footer {
  grid-template-columns: 1.5fr 1.5fr 1fr 1fr 1fr;
}

.logo-col {
  display: flex;
  flex-direction: column;
}

.footer-logo {
  display: block;
  margin-bottom: 3.2rem;
}

.social-links {
  list-style: none;
  display: flex;
  gap: 2.4rem;
}

.social-icon {
  height: 2.4rem;
  width: 2.4rem;
}

.copyright {
  font-size: 1.4rem;
  line-height: 1.6;
  color: #767676;
  /* Since it's in 'flex' box, by setting 'auto' it would go all the way to the end
  And this is exactly what we want */
  margin-top: auto;
}

.footer-heading {
  font-size: 1.8rem;
  font-weight: 500;
  margin-bottom: 4rem;
}

.contacts {
  font-style: normal; /* not italic */
  font-size: 1.6rem;
  line-height: 1.6;
}

.address {
  margin-bottom: 2.4rem;
}

.footer-nav {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 2.4rem;
}

.footer-link:link,
.footer-link:visited {
  text-decoration: none;
  font-size: 1.6rem;
  color: #767676; /* They should be as light as possible, not to draw attention */
  transition: all 0.3s;
}

.footer-link:hover,
.footer-link:active {
  color: #555;
}
