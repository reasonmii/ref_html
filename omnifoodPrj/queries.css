/*
We should not use 'px' in 'Media queries'

rem and em do NOT depend on html font-size in media queries
- They do not respond to the font-size we set in 'general.css' '.html'
- That means, in media queries 1rem is not 10px anymore
- ★ Intead, 1rem = 1em = 16px,
  which is the default font-size of the browser setting

※ rem vs. em
rem : root font-size
em : current font-size
- usually 1rem = 1em
- Since 'rem' has some bugs in some devices with media queries,
  ★ we can't use 'rem' in media queries, but em

Examples of 'Media queries'

★ It is applied only when the screen size <= 1200px
@media (max-width: 1200px) {
  .section-hero {
    background-color: orangered;
  }
}

★ It is applied only when the screen size <= 600px
@media (max-width: 600px) {
  .section-hero {
    border: 20px dashed blue;
    background-color: blue;
  }
}

Here, we'll start with the biggest screen size like 1344px
However, if you code from the smallest screen size like phone screen,
★ you should use 'min-width', not 'max-width'
*/

/* ***************************************** */
/* BREAK POINT1 : BELOW 1344px (Smaller desktops) */
/* ***************************************** */

/* 1350 / 16 -> about 84 */
@media (max-width: 84em) {
  /* To reduce the hero section's width */
  .hero {
    max-width: 120rem;
  }

  /* To reduce the font size */
  .heading-primary {
    font-size: 4.4rem;
  }

  /* The 3 * 4 pictures would be 2 * 6 pictures */
  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* ***************************************** */
/* BREAK POINT2 : BELOW 1200px (Landscape Tablets) */
/* ***************************************** */

/*
What is 'Responsive units'?
All the sizes defined with 'rem' would change their size immediately,
when we change 'html' 'font-size: 62.5%'
★ This means, if we want to change everyting smaller,
we simply have to change the 'font-size'
*/

/* 1200 / 16 -> about 75 */
@media (max-width: 75em) {
  html {
    /* ★ All elements sized with 'rem' would be decreased
    9px / 16px = 56.25% */
    font-size: 56.25%;
  }

  /* Adjust the size or the gap between elements individually which are still big,
  even though we adjusted 'html' 'font-size' */

  /* If we don't do this code,
  it seems like the 'header' is positioned a bit more inside than 'hero' */
  .header {
    padding: 0 3.2rem;
  }

  /* To increase the gap between menu bar at the header
  because it looks too cramped */
  .main-nav-list {
    gap: 3.2rem;
  }

  /* To reduce the gap between box elements */
  .grid {
    column-gap: 4.8rem;
    row-gap: 6.4rem;
  }

  .heading-secondary {
    font-size: 3.6rem;
  }

  .heading-tertiary {
    font-size: 2.4rem;
  }

  .hero {
    gap: 4.8rem;
  }

  /* To reduce the gap between each testimonial texts */
  .testimonials-container {
    padding: 3.2rem;
  }
}

/* ***************************************** */
/* BREAK POINT3 : BELOW 944px (Tablets) */
/* ***************************************** */

/* 940 / 16 = 59 */
@media (max-width: 59em) {
  html {
    /* 8px / 16px = 0.5 = 50% */
    font-size: 50%;
  }

  /* Change 2 columns to 1 column layout */
  .hero {
    grid-template-columns: 1fr;
    padding: 0 8rem;
    /* Vertically we need a more gap between the text and the main img */
    gap: 6.4rem;
  }

  .hero-text-box,
  .hero-img-box {
    text-align: center;
  }

  .hero-img {
    width: 60%;
  }

  .delivered-meals {
    justify-content: center;
    margin-top: 3.2rem;
  }

  .logos img {
    height: 2.4rem;
  }

  .step-number {
    font-size: 7.4rem;
  }

  .meal-content {
    /* Step down just one more */
    padding: 2.4rem 3.2rem 3.2rem 3.2rem;
  }

  .section-testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: repeat(6, 1fr);
  }

  .cta {
    grid-template-columns: 3fr 2fr;
  }

  .cta-form {
    grid-template-columns: 1fr;
  }

  .btn--form {
    margin-top: 1.2rem;
  }

  /* ★ Mobile Navigation */
  .btn-mobile-nav {
    display: block;
    /* To make sure that the button always stays at the top, use really really high value */
    z-index: 9999;
  }

  .main-nav {
    background-color: rgb(255, 255, 255, 0.97);

    /* ★ Contents behind it becomes blur
    You can check it when this object is transparent
    -> However, this won't be supported by 'Safari' */
    backdrop-filter: blur(10px);
    /* This code is the same as above which is supported by 'Safari' */
    -webkit-backdrop-filter: blur(10px);

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;

    /* Users cannot go to the horizontal way in the screen
    We code this to hide the navigation bar on the right side of the main screen for mobile users */
    transform: translateX(100%);

    display: flex;
    align-items: center;
    justify-content: center;

    /*********************************************************/

    /* Hide original navigation
    display: none
    -> ★ Allows NO transition at all!
    To animate we need another way
    
    ★ Also, display:none makes the element gone
    However 'opacity' means there are invisible elements with no opacity */

    /* 1) Hide the elements visually */
    opacity: 0;
    /* ★ Animation Speed
    ease-out: fast -> slow
    ease-in: slow -> fast
    ease-in-out: fast -> slow -> fast */
    transition: all 0.5s ease-in;

    /* 2) Make it unaccessible to mouse and keyboard
    Since we used 'opacity', not 'display:none', there are actually elements invisible
    Not to confuse users by showing 2 navigation bar, we would make it not appear when users use mouse or keyboard
    -> ★ Only accessible with mobile devices */
    pointer-events: none;

    /* 3) Hide it from screen readers */
    visibility: hidden;
  }

  /* It cannot applied if '.nav-open' is not on the page */
  .nav-open .main-nav {
    opacity: 1;
    pointer-events: auto; /* ★ */
    visibility: visible; /* ★ */
    /* Once the navigation is opened, we should go to the right side of the screen to see the menu bar for mobile device users */
    transform: translateX(0);
  }

  /* only when the navigation is opened
  the icon should be changed from 'menu' icon to 'close' icon */
  .nav-open .icon-mobile-nav[name="close-outline"] {
    display: block;
  }

  .nav-open .icon-mobile-nav[name="menu-outline"] {
    display: none;
  }

  .main-nav-list {
    flex-direction: column;
    gap: 4.8rem;
  }

  .main-nav-link:link,
  .main-nav-link:visited {
    font-size: 3rem;
  }
}

/* ***************************************** */
/* BREAK POINT4 : BELOW 704px (Smaller Tablets) */
/* ***************************************** */

/* 700 / 16 = about 44 */
@media (max-width: 44em) {
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: repeat(2, 1fr);
  }

  .diets {
    grid-column: 1/-1;
    /* We are not in the grid container
    So this is for individual alignment 
    -> Use 'justify-self' */
    justify-self: center;
  }

  .heading-secondary {
    margin-bottom: 4.8rem;
  }

  .pricing-plan {
    width: 100%;
  }

  .grid--footer {
    grid-template-columns: repeat(6, 1fr);
  }

  .logo-col,
  .address-col {
    grid-column: span 3;
  }

  .nav-col {
    /* ★ Put last three at the top and first two at the bottom */
    grid-row: 1;
    grid-column: span 2;
    margin-bottom: 3.2rem;
  }
}

/* ***************************************** */
/* BREAK POINT5 : BELOW 544px (Phones) */
/* ***************************************** */

/* ★ Check how it is with the real page,
test many different width and find the break point that is just before adjusting is needed  */
/* 550 / 16 = about 34 */
@media (max-width: 34em) {
  .grid {
    row-gap: 4.8rem;
  }

  .grid--2-cols,
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: 1fr;
  }

  .btn,
  .btn:link,
  .btn:visited {
    padding: 2.4rem 1.6rem;
  }

  .section-hero {
    padding: 2.4rem 0 6.4rem 0;
  }

  .hero {
    padding: 0 3.2rem;
  }
  .hero-img {
    width: 80%;
  }

  .logos img {
    height: 1.2rem;
  }

  /*********************************************************/

  /* ★ The part we had 'Z' pattern, now the text and image order is bad
  We can change this by manually change the number of its location in the grid

  ★ The number of 'nth-child' is basically the real order of the elements in the container */
  .step-img-box:nth-child(2) {
    grid-row: 1;
  }

  .step-img-box:nth-child(6) {
    grid-row: 5;
  }

  /* The image should be closer to the text it is related to
  We can do this by moving the image down a bit */
  .step-img-box {
    transform: translateY(2.4rem);
  }

  /*********************************************************/

  .testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: repeat(4, 1fr);
    gap: 1.2rem;
  }

  .cta {
    grid-template-columns: 1fr;
  }

  .cta-text-box {
    padding: 3.2rem;
  }

  /* Since image was added by 'css' file, and it doesn't have the real height, it just disappear
  So we should give the height manually to show it */
  .cta-img-box {
    grid-row: 1;
    height: 32rem;
  }
}

/* ***************************************** */
/* Fixing Safari flexbox 'gap' */
/* ***************************************** */

.no-flexbox-gap .main-nav-list li:not(:last-child) {
  margin-right: 4.8rem;
}

.no-flexbox-gap .list-item:not(:last-child) {
  margin-bottom: 1.6rem;
}

.no-flexbox-gap .list-icon:not(:last-child) {
  margin-right: 1.6rem;
}

.no-flexbox-gap .delivered-faces {
  margin-right: 1.6rem;
}

.no-flexbox-gap .meal-attribute:not(:last-child) {
  margin-bottom: 2rem;
}

.no-flexbox-gap .meal-icon {
  margin-right: 1.6rem;
}

.no-flexbox-gap .footer-row div:not(:last-child) {
  margin-right: 6.4rem;
}

.no-flexbox-gap .social-links li:not(:last-child) {
  margin-right: 2.4rem;
}

.no-flexbox-gap .footer-nav li:not(:last-child) {
  margin-bottom: 2.4rem;
}

@media (max-width: 75em) {
  .no-flexbox-gap .main-nav-list li:not(:last-child) {
    margin-right: 3.2rem;
  }
}

@media (max-width: 59em) {
  .no-flexbox-gap .main-nav-list li:not(:last-child) {
    margin-right: 0;
    margin-bottom: 4.8rem;
  }
}
